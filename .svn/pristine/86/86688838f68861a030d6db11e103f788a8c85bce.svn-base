<?php
namespace app\index\controller;

use app\admin\model\Apply_state;
use app\admin\model\Organization;
use app\index\model\Competition;
use think\Cache;
use think\Cookie;
use think\Db;
use think\Session;
use think\Validate;
use app\index\model\Apply as Applyclass;

class Apply extends Common{

    public $user_id;

    public function _initialize(){
        parent::_initialize();

    }

    /***
     * @return \think\response\Json
     * 用户提交报名
     */
    public function applicant(){

       if (request() ->isPost()){
           $data = input('post.');

           $err = "";
           !trim($data['cid']) && $err = '请选择竞赛项目';
           !trim($data['subject']) && $err = '请选择科目信息';
           !trim($data['name']) && $err = '请输入申报姓名';
           !trim($data['oid']) && $err = '请选择培训机构';
           !trim($data['area']) && $err = '请选择地区信息';
           !trim($data['phone']) && $err = '请输入电话号码';
           !trim($data['pname']) && $err = '请输入父母一方姓名';
           !trim($data['pic']) && $err = '请上传照片';
           !trim($data['addr']) && $err = '请输入详细地址';
           if($err){
               return parent::_responseResult(0, $err);die();
           }

           $user_id = $this ->user_id;
           $key = 'user_id_pay_data_'.$user_id;

           Cookie::set($key,$data,3600);

           if(Cookie::has($key)){
               Cookie::set('user_id_cid'.$user_id,$data['cid'],3600); //判断支付的竞赛的id是否和传的一致
               return parent::_responseResult('1','返回正常');
           }else{
               return parent::_responseResult('0','返回异常');
           }
           /***
           $data['uid'] = $user_id;
           $applyObj = new Applyclass();
           $applyStateObj = new Apply_state(); //报名状态

           Db::startTrans();
           try{
               $insertId = $applyObj ->allowField(true) ->insertGetId($data);
               $insert['aid'] = $insertId;
               $insert['uid'] = $user_id;

               $res2 = $applyStateObj ->allowField(true) ->save($insert);
               if ($insertId && $res2){
                   Db::commit();
                   return parent::_responseResult('1','报名成功');
               }

           }catch (\Exception $e) {
               // 回滚事务
               Db::rollback();
               return parent::_responseResult('0','报名失败');
           }***/

       }
   }

    /***
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * 用户报名的支付页面
     */
    public function is_apply(){

        if (request() ->isGet()){
            $data = input('get.');
            $cid = trim($data['cid']);
            $user_id = $this ->user_id;
            $apply_cid = Cookie::get('user_id_cid'.$user_id); //记录的报名时候的报名的项目id值
            $compData = array();
            if ($cid && $cid == $apply_cid){
                $compData = \db('competition') ->where('id',$cid) ->field('date,title,time,cost,class,subject') ->find();
                $compData['date'] = date('Y-m-d',$compData['date']);
                $compData['subject'] = parent::getnewValue($compData['subject'],'subject');
            }

            return parent::_responseResult('1','请求成功',$compData);

            /**$aid = intval($data['aid']);
            $applyObj = new Applyclass();

            $list = array();
            $data = $applyObj ->alias('a') ->join('apply_state b','a.id = b.aid')->where(['a.uid'=>$user_id,'a.id'=>$aid,'b.dstatus'=>0])->field('a.id,a.subject,a.class,a.cost') ->select();
            if ($data){
            $countArr = $applyObj ->alias('a') ->join('apply_state b','a.id = b.aid')->where(['a.uid'=>$user_id,'a.id'=>$aid,'b.dstatus'=>0]) ->sum('cost');
            foreach ($data as $v){
            $compData = \db('competition') ->where('id',$v['cid']) ->field('date,title,time') ->find();
            $v['date'] = date('Y-m-d',$compData['date']);
            $v['time'] = $compData['time'];
            $v['title'] = $compData['title'];
            $list['list'][] = $v ->toArray();
            }
            $list['count'] = $countArr;
            }

            return parent::_responseResult('1','请求成功',$list);**/
        }
    }

    /***
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * 进入复赛 初赛报名的页面 (弃用)
     */
   public function into_apply(){
        if (request()->isGet()){
            $data = input('get.');
            $cid = isset($cid) ? intval($data['cid']):4 ;
            $list =array();
            if ($cid){
                $compObj = new Competition();
                $compData = $compObj ->where('id',$cid) ->field('title,subject,class,startTime,endTime,com_des,content,type') ->find()->toArray();
                $compData['startTime'] = date('Y-m-d',$compData['startTime']);
                $compData['endTime'] = date('Y-m-d',$compData['endTime']);
                $compData['subject'] = parent::getnewValue($compData['subject'],'subject');
                $organObj = new Organization();
                $organData = $organObj ->field('id,name') ->select();
                $organList = array();
                foreach ($organData as $v){
                    $organList[] = $v->toArray();
                }
                $list['compList'] = $compData;
                $list['organList'] = $organList;

            }
            return parent::_responseResult('1','返回正常',$list);

        }
   }


    /***
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * 暂时没用到
     */
   public function sundry(){
       if (request()->isGet()){
           $data = array();
           $data = Cache::get('get_subject_class_key');
           if (empty($data)){
               $subjecData = Db::table('tf_subject') ->field('id,name') ->select();
               foreach ($subjecData as $v){
                   $data['subject'][$v['id']] = $v['name'];
               }
               $classData = Db::table('tf_classes') ->field('id,name') ->select();
               foreach ($classData as $v){
                   $data['class'][$v['id']] = $v['name'];
               }
               Cache::set('get_subject_class_key',$data,3600*24*30);
           }

           return $this ->_responseResult('1','操作成功',$data);
       }
   }


   public function test(){


       $res = Cookie::set('ss',123);

       var_dump($res);die();
   }






}