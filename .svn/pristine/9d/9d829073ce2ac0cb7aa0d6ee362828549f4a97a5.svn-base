<?php
namespace app\admin\controller;

use think\Db;

class Grade extends Common
{
    private $cModel;   //当前控制器关联模型

    public function _initialize()
    {
        parent::_initialize();
        $this->cModel = new \app\admin\model\Grade();   //别名：避免与控制名冲突
    }

    public function index()
    {
        $where = [];
        if (input('get.search')){
            $where['a.uid|b.subject'] = ['like', '%'.input('get.search').'%'];
        }
        if (input('get.cid')){
            $where['a.cid'] = input('get.cid');
            $this ->assign('cid',input('get.cid'));
        }

        if (input('get.is_pass') && in_array(input('get.is_pass'),array(-1,1))){
            $where['a.is_pass'] = input('get.is_pass');
            $this ->assign('is_pass',input('get.is_pass'));
        }

        if (input('get._sort')){
            $order = explode(',', input('get._sort'));
            $order = 'a.'.$order[0].' '.$order[1];
        }else{
            $order = 'a.id desc';
        }

        $compData = model('Competition') ->where('status',1)->where('subject','neq',5)->column('title','id');

        foreach ($compData as $k=>$v){
            $idArr[] = $k;
        }

        if (!isset($where['a.cid'])){
            $where['a.cid'] = ['in',$idArr];
        }
        $this ->assign('compData',$compData); //竞赛数据

        $dataList = $this->cModel->alias('a') ->join('ticket b','a.tid=b.id')
            ->where($where)
            ->order($order)
            ->field('a.grade,a.is_pass,b.*,a.id,a.is_issue')
            ->paginate('', false, page_param());

        $this->assign('dataList', $dataList);
        return $this->fetch();
    }


    public function delete()
    {
        if (request()->isPost()){
            $id = input('id');
            if (isset($id) && !empty($id)){
                $id_arr = explode(',', $id);
                $where = [ 'id' => ['in', $id_arr] ];
                $ticketArr = $this->cModel ->where($where) ->column('tid');

                foreach ($ticketArr as $k=>$v){
                    $data[$k]['id'] = $v;
                    $data[$k]['issue'] = 0;
                }

                Db::startTrans();
                try{
                    $result = $this->cModel->where($where)->delete();
                    if ($result){
                        model('Ticket') ->isUpdate(true) ->saveAll($data);
                        Db::commit();
                    }else{
                        return ajaxReturn('操作失败');
                    }
                }catch (\Exception $e) {
                    // 回滚事务
                    Db::rollback();
                    return ajaxReturn($e->getMessage());
                }
            }
        }
    }

    /***
     * @throws \PHPExcel_Exception
     * @throws \PHPExcel_Reader_Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * @shanghcuan chengji 非书画上传考试成绩
     */
    public function importExecl(){

        if (request()->isPost()) {

            $header = array('tid','name','tnum','subject','class','title','sex','date','time','addr','grade');

            $result = parent::exportExcel($header);

            if (empty($result)){
                $this ->error('上传格式错误');
                die();
            }

            $compData = model('Competition') ->column('pass_line','id');

            $gradeArr = $this ->cModel ->column('tid','id');

            $tidArr = array();
            $gidArr = array();
            foreach ($gradeArr as $k=>$v){
                $tidArr[] = $v;
                $gidArr[$v['tid']] = $k;
            }


            $error = array();
            $insert = array();
            foreach ($result as $k=>$v){
                $tid = intval($v['tid']); //去杂
                if ($tid){
                    $data = model('Ticket') ->where('id',$tid) ->limit(1)->field('id,cid,uid,aid') ->find();
                    if ($data){
                        $is_pass = self::get_pass_status($v['grade'],$compData[$data['cid']]);
                        if (in_array($tid,$tidArr)){
                            /**该条记录已生成,执行修改分支**/
                            $update[$k]['id'] = $gidArr[$tid];
                            $update[$k]['grade'] = intval($v['grade']);
                            $update[$k]['update_time'] = time();
                            $update[$k]['is_pass'] = $is_pass;
                        }else{
                            /*执行添加操作*/
                            $idsArr[$k]['id'] = $data['id'];
                            $idsArr[$k]['issue'] = 1;

                            $insert[$k]['cid'] = $data['cid'];
                            $insert[$k]['tid'] = $tid;
                            $insert[$k]['aid'] = $data['aid'];
                            $insert[$k]['uid'] = $data['uid'];
                            $insert[$k]['grade'] = intval($v['grade']);
                            $insert[$k]['create_time'] = time();
                            $insert[$k]['is_pass'] = $is_pass;
                        }

                    }else{

                    }
                }
            }


            if (empty($insert) && empty($update)){
                return $this ->error('不能上传空execl');die();
            }

            if (empty($insert) && $update){
                $res3 = $this ->cModel ->isUpdate(true)->saveAll($update); //批量信息grade表的数据
                if ($res3){
                    return $this->success('上传成功');
                }else{
                    return $this ->error('修改失败');
                }
            }

            if (empty($update) && $insert){

                    $this ->cModel ->saveAll($insert);

                    model('Ticket') ->isUpdate(true)->saveAll($idsArr); //批量更新ticket表的is_issue 字段
                    return $this->success('上传成功');

            }

            if ($insert && $update){

                    $this ->cModel->saveAll($insert);
                    model('Ticket') ->isUpdate(true)->saveAll($idsArr); //批量更新ticket表的is_issue 字段
                    $this ->cModel ->isUpdate(true)->saveAll($update); //批量信息grade表的数据

                   return $this->success('上传成功');

            }

        }

    }

    /***
     * @param $grade
     * @param $pass_line
     * @return string
     * 处理考试成绩是否合格
     */
    public function get_pass_status($grade,$pass_line){
        $check = round($grade,1) - round($pass_line,1);
        if ($check >= 0){
            return '1';
        }else{
            return '-1';
        }
    }

    /***
     * 导出成绩表
     */
    public function exportExecl(){

        if (input('get.search')){
            $where['a.uid|b.subject'] = ['like', '%'.input('get.search').'%'];
        }
        if (input('get.cid')){
            $where['a.cid'] = input('get.cid');
            $this ->assign('cid',input('get.cid'));
        }

        if (input('get.is_pass') && in_array(input('get.is_pass'),array(-1,1))){
            $where['a.is_pass'] = input('get.is_pass');
            $this ->assign('is_pass',input('get.is_pass'));
        }

        if (input('get._sort')){
            $order = explode(',', input('get._sort'));
            $order = $order[0].' '.$order[1];
        }else{
            $order = 'a.id desc';
        }

        //上面是检索的内容
        $header = array('姓名','科目','年龄','性别','比赛项目','比赛成绩','是否合格','联系人','地区','地址','电话');
        $data =array();
        $filename = '比赛成绩表'.date('Y-m-d');


        $dataList = $this->cModel->alias('a')
            ->join('ticket b','a.cid=b.cid')
            ->where($where)
            ->order($order)
            ->field('a.grade,a.is_pass,a.linkman,a.phone,a.area,a.address,b.subject,a.cid,b.age,b.name,b.sex,b.title')
            ->paginate('', false, page_param());

        $list =array();
        foreach ($dataList as $k=>$v){
            $list[$k][] = $v ->name;
            $list[$k][] = parent::getnewValue($v ->subject,'subject');
            $list[$k][] = $v ->age;
            $list[$k][] = parent::getnewValue($v ->sex,'sex');
            $list[$k][] = $v ->title;
            $list[$k][] = $v ->grade;
            $list[$k][] = $v ->is_pass;
            $list[$k][] = $v ->linkman;
            $list[$k][] = $v ->area;
            $list[$k][] = $v ->address;
            $list[$k][] = $v ->phone;
        }


        foreach ($list as $k=>$v){
            foreach ($header as $sk => $sv){
                $data[$k][$header[$sk]] = $v[$sk];
            }
        }

        parent::importExcel($header,$data,$filename);

        die();


    }

    /**下载成绩模板*/

    public function download(){

        $where = [];
        if (input('get.cid')){
            $where['cid'] = input('get.cid');
            $this ->assign('cid',input('get.cid'));
        }

        $dataList = model('Ticket')
            ->where($where)
            ->field('id,tnum,name,subject,class,title,sex,date,time,addr')
            ->select();

        $list = array();
        foreach ($dataList as $k=>$v){
            $list[$k][] = $v->id;
            $list[$k][] = $v->name;
            $list[$k][] = $v->tnum;
            $list[$k][] = parent::getnewValue($v ->subject,'subject');
            $list[$k][] = $v->class;
            $list[$k][] = $v->title;
            $list[$k][] = parent::getnewValue($v ->sex,'sex');
            $list[$k][] = date('Y-m-d',$v->date);
            $list[$k][] = $v->time;
            $list[$k][] = $v->addr;
            $list[$k][] = '';

        }

        $header = array('考试ID','姓名','准考证','科目','年级','比赛项目','性别','考试日期','考试时间','考试地点','考试成绩');
        $data =array();
        $filename = '考试成绩填写模板'.date('Y-m-d');

        foreach ($list as $k=>$v){
            foreach ($header as $sk => $sv){
                $data[$k][$header[$sk]] = $v[$sk];
            }
        }

        parent::importExcel($header,$data,$filename);
        die();
    }


    /***
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * 发布成绩
     */
    public function release(){
        if (request() ->isGet()){

            if (input('get.cid')){
               $cid = input('get.cid');
            }

            if (empty($cid)){
                return ajaxReturn('竞赛参数错误');
            }

            $dataList = model('Grade') ->where('cid',$cid) ->where('is_issue',0)->field('id') ->select();

            if ($dataList){
                $data =array();
                foreach ($dataList as $k=>$v){
                    $data[$k]['id'] = $v['id'];
                    $data[$k]['is_issue'] = 1;
                }
                model('Grade') ->isUpdate(true) ->saveAll($data);

                return ajaxReturn('操作成功',1);
            }else{
                return ajaxReturn('发布数据为空',0);
            }

        }
    }



}